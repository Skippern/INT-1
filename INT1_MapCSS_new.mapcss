/* MapCSS scheme for rendering INT-1 style maps based on OpenStreetMap data
 *
 * The best way to check marine map data quality is to compare with existing map with
 * similar rendering. Also for maritime personel wanting to verify if what is in the
 * database corresponds with reality, seeing it rendered in a standardized and familiar
 * way is the best option.
 *
 */

/* Meta data */
meta {
	title:				"INT 1 Rendering (IHO standarized symbols) PD";
	icon:				"https://raw.githubusercontent.com/Skippern/INT-1/master/SVG/IHO_c.svg";
	author:				"Aun (Skippern) Johnsen";
	version:			"0.2";
	description:		"JOSM rendering of nautical symbols according to IHO standard INT-1";
	min-josm-version:	7166;
}

/* For JOSM, creating a light background color */
canvas {
	fill-color:			aliceblue; 
	antialiasing:		'full';
	default-points: 	true; /* hides points */
	default-lines: 		true; /* hides lines */
	fill-opacity:		1; /* should underlaying layers shine through? */
}

/* Defaults */
node["seamark:name"] {
	text:			"seamark:name";
	text-color:		black;
}

/* Q */
node["seamark:type"=buoy_lateral]::buoy,
node["seamark:type"=beacon_lateral]::buoy,
node["seamark:type"=buoy_cardinal]::buoy,
node["seamark:type"=beacon_cardinal]::buoy,
node["seamark:type"=buoy_isolated_danger]::buoy,
node["seamark:type"=beacon_isolated_danger]::buoy,
node["seamark:type"=buoy_safe_water]::buoy,
node["seamark:type"=beacon_safe_water]::buoy,
node["seamark:type"=buoy_special_purpose]::buoy,
node["seamark:type"=beacon_special_purpose]::buoy {
	set				.buoy;
}
node["seamark:type"=buoy_lateral]::buoy,
node["seamark:type"=beacon_lateral]::buoy,
node["seamark:type"=buoy_cardinal]::buoy,
node["seamark:type"=beacon_cardinal]::buoy,
node["seamark:type"=buoy_isolated_danger]::buoy,
node["seamark:type"=beacon_isolated_danger]::buoy,
node["seamark:type"=buoy_safe_water]::buoy,
node["seamark:type"=beacon_safe_water]::buoy,
node["seamark:type"=buoy_special_purpose]::buoy,
node["seamark:type"=beacon_special_purpose]::buoy {
	icon-image:		eval(concat("https://raw.githubusercontent.com/Skippern/INT-1/master/SVG/Q/Q20", coalesce(tag(concat("seamark:",tag("seamark:type"),":shape")), "pillar"), "/", cond(tag(concat("seamark:",tag("seamark:type"),":colour_pattern")) == "vertical", "V_", ""), cond(tag(concat("seamark:",tag("seamark:type"),":colour_pattern")) == "horizontal", "H_", ""), coalesce(tag(concat("seamark:",tag("seamark:type"),":colour")), "generic"), ".svg" ));
	icon-width:		16;
	icon-opacity:	1;
}

/*
 * concat(value, value, ...)
 * concatenate strings together
 * concat("amenity: ", tag("amenity")) => "amenity: restaurant"
 */
/* END */
